name: CI-CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains multiple jobs
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      # install applicaion dependencies
      - name: Install dependencies
        run: |
          npm ci 
          npm install -g typescript
      # build and test the apps     
      - name: build
        run: |
          tsc
      - name: test
        run: | 
          echo "Run unit tests here"

  push_to_Docker_Hub:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      # build docker image and push to docker hub
      # only if the app build and test successfully
      needs: [build_test]
      outputs:
        imageTag: ${{ steps.gitversion.outputs.majorMinorPatch }}
      steps:
        - name: checkout repo
          uses: actions/checkout@v2
          with:
            fetch-depth: 0

        - name: Install GitVersion
          id: gitversion
          uses: gittools/actions/gitversion/setup@v0.9.7
          with:
            versionSpec: '5.x'

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v1
      
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
      
        - name: Build and push
          uses: docker/build-push-action@v2
          with:
            context: ./
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/case-challenge-demo:${{ steps.gitversion.outputs.majorMinorPatch  }}
          
  deploy:
    runs-on: ubuntu-latest
    needs: push_to_Docker_Hub
    steps:
      
      # Deploy the app
      - name: deploy_k8s
        run: | 
          echo "sed -i -e "s/IMAGETAG/${ needs.push_to_Docker_Hub.outputs.imageTag }/g" Deployment.yml "
          echo "kubectl apply -f build/Deployment.yml"